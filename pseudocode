PROJECT
1. create functions for all of the basic math operators
    a. addition (+)
    b. subtraction (-)
    c. multiplication (*) and (x) (x - extra)
    d. division (/)
    e. modulo (%) (extra)
    f. exponentiation (^) (extra)
Done

2. calculations will consist of
    a. number, operator, number (ie 3 + 5)
    b. create 3 variables
        b1. one for each part of the operation
        b2. these variables will be used to update display
Done

3. create "operate" function
    a. that takes an operator and 2 numbers
        a1. and calls the appropriate function (1 a - f) on the numbers
Done

4. create basic HTML calculator
    a. with buttons for each digit
    b. and operator
        b1. +
        b2. -
        b3. * and x
        b4. /
        b5. %
        b6. ^
        b7. =
    c. and a display
        c1. fill with temporary dummy numbers
    d. add "clear" button
(note: don't worry about making these functional yet)
Done

5. create the functions that populate the display
    a. when you click the digit buttons
    b. store content of the display (number/s) 
        b1. in a variable (for the next step)
Done

6. make the calculator work
    a. by storing the first and second input numbers
    b. and then operate() on them (3)
        b1. according to the selected operator
    c. when user presses =
    d. should already have code that can populate display
        d1. once operate has been called
        d2. update display with result of operation
    e. figure out how to store values
        e1. and call operate function with them
wip

POSSIBLE BUGS
1. calculator should not evaluate more than a single pair of numbers at a time
    a. if second operator is pressed (ie: 12 + 7 -)
        a1. should evaluate initial pair of numbers (ie: 12 + 7 = 19)
        a2. display result (ie: 19) as first number in new calculation
        a3. along with second operator (ie: -)
        example: https://mrbuddh4.github.io/calculator/

2. round answers with long decimals so display isn't overflown

3. pressing = before entering all numbers and/or operator can cause problems

4. "clear" should wipe out any existing data
Done

5. don't let divide by 0
    a. display snarky error message

6. make sure operation only runs when supplied 2 numbers and an operator by the user
        a. not a number and 2 operators
        b. if consecutive operator buttons are pressed
            b1. should not run evaluations 
            b2. should only take last operator entered for next operation

7. when result is displayed
    a. pressing new digit should clear result
    b. and start new calculation
    c. instead of appending digit to existing result

EXTRA CREDIT:
1. users can get floating point numbers
    a. if they do the math required to get them
    b. but can't type them in yet
        b1. add a "." button
        b2. and let users input decimals
        b3. limit to only one "1" (ie: no 12.3.56.5)
        b4. disable the "." if decimal separator is already present in display

2. add a "backspace" button
    a. so user can undo last input
Done

3. add keyboard support
